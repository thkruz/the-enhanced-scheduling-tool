---
name: Deploy Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      # Get Node Modules from Cache
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-
            ${{ env.cache-name }}-
            ${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Ensure Node Modules Setup
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      # Set Timezone to match snapshots
      - name: Set Timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "America/New_York"
      # Unit Tests for Code Coverage
      - name: Test
        run: npm test
  gh-pages:
    name: Deploy to GitHub Pages
    environment: Development
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2
      # Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      # Get Node Modules from Cache
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-
            ${{ env.cache-name }}-
            ${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Ensure Node Modules Setup
      - name: Install Dependencies
        run: npm ci --ignore-scripts
      # Build
      - name: Build
        run: npm run build

      # Deploy to GitHub Pages
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
          # The branch the action should deploy to.
          BRANCH: gh-pages
          # The folder the action should deploy.
          FOLDER: dist
          # Automatically remove deleted files from the deploy branch
          CLEAN: true
